using Cinemachine;
using System;
using System.Collections;
using System.Collections.Generic;
using Unity.VisualScripting;
using UnityEngine;
using UnityEngine.SceneManagement;
using UnityEngine.UI;
using static ScoreManager;

public class GameController : MonoBehaviour
{
    [SerializeField] Player _tntPlayer;

    bool _isTNT = false;

    /// <summary>Player出現カウント</summary>
    int _playercount = 0;

    /// <summary>Player出現真偽</summary>
    public bool IsPlayerCount = true;


    /// <summary>Enemyの残機テキスト</summary>
    [SerializeField] Text _enemyText;

    /// <summary>Enemyの残機</summary>
    int _enemyScore;

    /// <summary>Finish真偽</summary>
    private bool _isFinish = false;

    /// <summary>終わりボタン</summary>
    [SerializeField] GameObject _finishButtom;

    /// <summary>GameOver真偽</summary>
    private bool _isGameOver = false;

    /// <summary>GameOverボタン</summary>
    [SerializeField] GameObject _gameOverButton;

    /// <summary>フィールド上にいるEnemyの数
    [SerializeField] GameObject[] _enemyBox;

    /// <summary>プレイヤーPrefab</summary>
    [SerializeField] List<Player> _playerList = new List<Player>();

    //現在出現していプレイヤーのプレファブ
    [SerializeField] Player _currentPlayerPrefab;

    //現在のプレイヤー
    [SerializeField] Player _currentPlayer;

    /// <summary>キーがItemType, 値がItemBaceClass</summary>
    [SerializeField] Dictionary<ItemType, ItemBaceClass> _itemDic = new Dictionary<ItemType, ItemBaceClass>();
    /// <summary>キーがItemType, 値がInt</summary>
    [SerializeField] Dictionary<ItemType, int> _itemCount = new Dictionary<ItemType, int>();

    public void Start()
    {
        _enemyBox = GameObject.FindGameObjectsWithTag("Enemy");
        _enemyText.text = "ENEMY:" + _enemyScore + "/" + _enemyBox.Length;
        _finishButtom.SetActive(false);
        _gameOverButton.SetActive(false);
    }

    private void Update()
    {
        //Enemyのカウントが0になったら実行
        GameClear();

        //Playerのスポーン
        GetPlayerSpawn();

        GameOver();
    }

    /// <summary>
    /// アイテムをアイテムリストに追加する
    /// </summary>
    /// <param name="item"></param>
    public void GetItem(ItemType itemType, ItemBaceClass item)
    {
        //_itemDicがitemTypeだったら(ContainsKey = bool型)
        if (_itemDic.ContainsKey(itemType))
        {
             _itemCount[itemType]++;
            Debug.Log("アイテム取得" + _itemCount);
        }

        else
        {
            _itemDic.Add(itemType, item);
            _itemCount.Add(itemType, 1);
        }
    }

    // アイテムを使う
    public void UseItem(ItemType itemType)
    {
        if (_itemDic.Count > 0)
        {
            if (_itemDic[itemType] == null || _itemCount.Count == 0)
            {
                return;
            }

            // itemに _itemDicを格納
            ItemBaceClass item = _itemDic[itemType];

            item.Activate();
        }
            _itemCount[itemType]--;
            Debug.Log("アイテム使用" + _itemCount);
    }

    public void AddTNT()
    {
        //現在出現していプレイヤーのプレファブを０番目に出現
        _playerList.Insert(0, _currentPlayerPrefab);
        //TNTプレイヤーを０番目に出現
        _playerList.Insert(0, _tntPlayer);
        //現在のプレイヤーを破棄
        Destroy(_currentPlayer.gameObject);
    }


    /// <summary>Playerのスポーン</summary>
    private void PlayerSpawn()
    {
        if (_playerList.Count > 0)
        {
            if (IsPlayerCount == true)
            {
                //現在出現していプレイヤーのプレファブにプレイヤーリストの0番目を格納
                _currentPlayerPrefab = _playerList[0];
                GameObject obj = Instantiate(_playerList[0].gameObject, transform.position, Quaternion.identity);
                _currentPlayer = obj.GetComponent<Player>();
                //プレイヤーリストの0番目を破棄
                _playerList.Remove(_playerList[0]);
                IsPlayerCount = false;
            }
        }
        else if (_currentPlayer = null)
        {
            _isGameOver = true;
            Debug.LogWarning("GameOver");
            Debug.LogWarning(_playerList.Count + "to" + _playercount);
        }
    }

    private void GetPlayerSpawn()
    {
        Invoke(nameof(PlayerSpawn), 1f);
    }

    /// <summary>Enemyの数</summary>
    public void EnemyScore()
    {
        _enemyScore += 1;
        _enemyText.text = "ENEMY:" + _enemyScore + "/" + _enemyBox.Length;
        /// <summary>スコアテキストがEnemyの数を上回ったら</summary>
        if (_enemyScore >= _enemyBox.Length)
        {
            _isFinish = true;
        }
    }

    /// <summary>FinishButtomを表示</summary>
    private void GameClear()
    {
        if (_isFinish)
        {
            _finishButtom.SetActive(true);
        }
    }

    public void GameOver()
    {
        if (_isGameOver && _isFinish == false)
        {
            _gameOverButton.SetActive(true);
        }
    }

    /// <summary>リザルト画面へロード</summary>
    void Result()
    {
        SceneManager.LoadScene("Result");
    }

    /// <summary>0.5秒後に作動</summary>
    public void GetResult()
    {
        Invoke(nameof(Result), 2f);
    }
}
